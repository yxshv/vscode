---
import { DownloadIcon, ArrowRightIcon } from "@radix-ui/react-icons";
---

<div
  class="xl:px-40 px-6 h-screen xl:h-auto flex flex-col gap-4 xl:gap-8 items-center mt-10"
>
  <div data-heading class="xl:opacity-0 xl:will-change-[opacity]">
    <h1
      class="text-center text-4xl xl:text-7xl xl:will-change-[opacity,transform] flex flex-col justify-center gap-4"
    >
      <span class="font-light">Code Editing.</span>
      <span class="font-medium">Redefined</span>
    </h1>
  </div>
  <div data-desc class="xl:will-change-[opacity] xl:opacity-0">
    <p
      class="text-center xl:will-change-[opacity,transform] text-md xl:text-xl font-light"
    >
      A free, open source, cross platform code editor
    </p>
  </div>
  <div data-btns class="xl:opacity-0 xl:will-change-[opacity]">
    <div
      class="flex justify-center gradient xl:will-change-[opacity,transform] items-center text-sm xl:text-lg font-light gap-3"
    >
      <div
        style={{
          "--color-start": "#1F9CF0",
          "--color-end": "#206DBF",
        }}
        class="p-[2px] bg-gradient-to-t gradient rounded-[calc(0.375rem+2px)] xl:rounded-[calc(0.5rem+2px)]"
      >
        <a
          href="#"
          class="bg-accent-1 text-white px-5 xl:px-6 py-2 gap-1 flex justify-center items-center rounded-md xl:rounded-lg"
        >
          <DownloadIcon className="xl:w-5 xl:h-5" />
          Download
        </a>
      </div>

      <div
        style={{
          "--color-start": "rgb(31, 156, 240, 0.5)",
          "--color-end": "#38393E",
        }}
        class="p-[2px] bg-gradient-to-t gradient rounded-[calc(0.375rem+2px)] xl:rounded-[calc(0.5rem+2px)]"
      >
        <a
          href="#"
          class="bg-gray-1 text-white px-5 xl:px-6 py-2 rounded-md xl:rounded-lg gap-1 flex justify-center items-center"
          >Try it on the Web
          <ArrowRightIcon className="xl:w-5 xl:h-5" />
        </a>
      </div>
    </div>
  </div>
  <div
    data-img
    class="xl:opacity-0 xl:mt-14 mt-6 z-1 motion-reduce:scale-100 lg:scale-90 xl:translate-y-[100px] xl:will-change-[opacity,transform]"
  >
    <div
      class="flex justify-center isolate rounded-[calc(0.5rem+2px)] editor-bg p-[2px] motion-reduce:will-change-[] xl:will-change-[opacity,transform] items-center relative"
    >
      <img src="/dark+.png" class="rounded-lg" />
      <div class="blob-1 bg-accent-1 w-[100vw] xl:w-[65vw]"></div>
    </div>
  </div>
</div>

<style>
  .blob-1 {
    position: absolute;
    z-index: -1;
    top: 80%;
    left: 50%;
    transform: translate(-50%, -50%);
    aspect-ratio: 1/1;
    border-radius: 50%;
    filter: blur(300px);
  }

  .gradient {
    --tw-gradient-stops: var(--color-start) 0%, var(--color-end) 95%;
  }

  .editor-bg {
    background: linear-gradient(
      to bottom,
      rgba(31, 156, 240, 0.6) 0%,
      rgba(31, 156, 240, 0) 80%
    );
  }
</style>

<script>
  import { isMobile } from "../utils/responsive";
  import gsap from "gsap";
  import ScrollTrigger from "gsap/ScrollTrigger";

  if (!isMobile()) {
    gsap.registerPlugin(ScrollTrigger);

    window.addEventListener("beforeunload", function () {
      this.window.scrollY = 0;
    });

    window.onload = () => {
      gsap.to("[data-heading]", {
        opacity: 1,
        duration: 1,
        delay: 0.1,
      });
      !window.matchMedia("prefers-reduced-motion").matches &&
        gsap.to("[data-heading]>h1", {
          opacity: 0,
          y: -30,
          scrollTrigger: {
            trigger: "body",
            start: "top 0%",
            endTrigger: "body",
            end: "top -10%",
            scrub: true,
          },
        });

      gsap.to("[data-desc]", {
        opacity: 1,
        duration: 1,
        delay: 0.2,
      });
      !window.matchMedia("prefers-reduced-motion").matches &&
        gsap.to("[data-desc]>p", {
          opacity: 0,
          y: -50,
          scrollTrigger: {
            trigger: "body",
            start: "top 0%",
            end: "top -20%",
            scrub: true,
          },
        });

      gsap.to("[data-btns]", {
        opacity: 1,
        duration: 1,
        delay: 0.3,
      });
      !window.matchMedia("prefers-reduced-motion").matches &&
        gsap.to("[data-btns]>div", {
          opacity: 0,
          y: -70,
          scrollTrigger: {
            trigger: "body",
            start: "top 0%",
            end: "top -30%",
            scrub: true,
          },
        });

      gsap.to("[data-img]", {
        opacity: 1,
        scale: 1,
        y: 0,
        duration: 1,
        delay: 0.4,
      });
      !window.matchMedia("prefers-reduced-motion").matches &&
        gsap.to("[data-img]>div>img", {
          y: -100,
          scale: 1.1,
          scrollTrigger: {
            trigger: "body",
            start: "top 0%",
            end: "top -40%",
            scrub: 0,
          },
        });
    };
  }
</script>
